<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>effective python 5. 클래스와 인터페이스 - Series - 일편단씸의 블로그</title><link>https://mechurak.github.io/series/effective-python-5.-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/</link><description>effective python 5. 클래스와 인터페이스 - Series - 일편단씸의 블로그</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 24 Dec 2020 01:00:00 +0900</lastBuildDate><atom:link href="https://mechurak.github.io/series/effective-python-5.-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/" rel="self" type="application/rss+xml"/><item><title>'Better way 43. 커스텀 컨테이너 타입은 collections.abc를 상속하라' 정리</title><link>https://mechurak.github.io/2020-12-24_custom-container/</link><pubDate>Thu, 24 Dec 2020 01:00:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2020-12-24_custom-container/</guid><description>파이썬 관례에 따르는 커스텀 컨테이너를 만들어야 한다면, collections.abc 를 활용하는 게 좋습니다.</description></item><item><title>'Better way 42. 비공개 애트리뷰트보다는 공개 애트리뷰트를 사용하라' 정리</title><link>https://mechurak.github.io/2020-12-23_public-attribute/</link><pubDate>Wed, 23 Dec 2020 01:02:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2020-12-23_public-attribute/</guid><description>비공개 애트리뷰트(변수 앞에 밑줄 두 개)는 사용하지 맙시다.</description></item><item><title>'Better way 41. 기능을 합성할 때는 믹스인 클래스를 사용하라' 정리</title><link>https://mechurak.github.io/2020-12-23_mix-in/</link><pubDate>Wed, 23 Dec 2020 01:01:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2020-12-23_mix-in/</guid><description>믹스인 클래스: 따로 애트리뷰트는 없고 하위 클래스에서 공통으로 사용할 기능만 정의한 클래스</description></item><item><title>'Better way 40. super로 부모 클래스를 초기화하라' 정리</title><link>https://mechurak.github.io/2020-12-23_init-parent/</link><pubDate>Wed, 23 Dec 2020 01:00:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2020-12-23_init-parent/</guid><description>부모 클래스의 초기화는 &lt;code>super().__init__()&lt;/code> 으로 합니다.</description></item><item><title>'Better way 39. 객체를 제너릭하게 구성하려면 @classmethod를 통한 다형성을 활용하라' 정리</title><link>https://mechurak.github.io/2020-12-22_multiple-constructor/</link><pubDate>Tue, 22 Dec 2020 01:02:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2020-12-22_multiple-constructor/</guid><description>&lt;code>@classmethod&lt;/code> 를 사용해서 하위 클래스를 같은 방식으로 사용할 수 있습니다.</description></item><item><title>'Better way 38. 간단한 인터페이스의 경우 클래스 대신 함수를 받아라' 정리</title><link>https://mechurak.github.io/2020-12-22_functions-vs-class/</link><pubDate>Tue, 22 Dec 2020 01:01:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2020-12-22_functions-vs-class/</guid><description>간단한 인터페이스가 필요할 때는 클래스를 정의하고 인스턴스화하는 대신 간단히 함수를 사용할 수 있습니다.</description></item><item><title>'Better way 37. 내장 타입을 여러 단계로 내포시키기보다는 클래스를 합성하라' 정리</title><link>https://mechurak.github.io/2020-12-22_compose-classes/</link><pubDate>Tue, 22 Dec 2020 01:00:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2020-12-22_compose-classes/</guid><description>값을 관리하는 부분이 점점 복잡해지고 있다면, 해당 기능을 클래스로 분리합시다.</description></item></channel></rss>