<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>python - Tag - 일편단씸의 블로그</title><link>https://mechurak.github.io/tags/python/</link><description>python - Tag - 일편단씸의 블로그</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 31 Jan 2023 23:30:00 +0900</lastBuildDate><atom:link href="https://mechurak.github.io/tags/python/" rel="self" type="application/rss+xml"/><item><title>Pandas DataFrame 함수 매핑 - apply()</title><link>https://mechurak.github.io/2023-01-31_pandas_apply/</link><pubDate>Tue, 31 Jan 2023 23:30:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2023-01-31_pandas_apply/</guid><description>&lt;p>DataFrame의 열 혹은 행에 특정 함수를 적용하고 싶을때는 &lt;code>apply()&lt;/code>를 사용한다.&lt;/p></description></item><item><title>Pandas DataFrame 그룹 연산 - groupby()</title><link>https://mechurak.github.io/2023-01-27_pandas_groupby/</link><pubDate>Fri, 27 Jan 2023 23:30:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2023-01-27_pandas_groupby/</guid><description>&lt;p>DataFrame을 특정 열의 값들 기준으로 그룹화 해서 살펴보는 경우가 많다. &lt;code>groupby()&lt;/code>를 알아보자.&lt;/p></description></item><item><title>Pandas DataFrame 합치기 - concat()과 merge()</title><link>https://mechurak.github.io/2023-01-26_pandas_concat_merge/</link><pubDate>Thu, 26 Jan 2023 23:30:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2023-01-26_pandas_concat_merge/</guid><description><![CDATA[<p>두 DataFrame을 위아래로 합칠때는 <code>pd.concat()</code>, 특정 열을 기준으로 join 할 때는 <code>pd.merge()</code>를 사용하자.</p>]]></description></item><item><title>Pandas DataFrame 필터링 - boolean indexing 과 isin() 메소드</title><link>https://mechurak.github.io/2023-01-25_pandas_filter/</link><pubDate>Wed, 25 Jan 2023 23:00:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2023-01-25_pandas_filter/</guid><description><![CDATA[<p>특정 조건에 해당하는 행들만 필터링 하는 것을 <code>boolean indexing</code> 이라고 한다. <code>isin()</code> 메소드도 유용하다.</p>]]></description></item><item><title>진행상황 표시에 사용하는 tqdm 모듈, enumerate, zip, generator 와 함께 사용</title><link>https://mechurak.github.io/2022-10-01_tqdm/</link><pubDate>Sat, 01 Oct 2022 23:00:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2022-10-01_tqdm/</guid><description><![CDATA[<p>시간이 좀 걸리는 loop 를 돌 때, 해당 iterable 을 <code>tqdm</code>으로 감싸기만 하면 progress bar를 예쁘게 보여준다.<br>
<code>enuerate</code>, <code>zip</code>과 같이 사용할 때는 길이를 확인할 수 있는 안쪽의 list 에 <code>tqdm</code>을 적용해야 하고, <code>generator</code>와 같이 사용할 때는 <code>total</code>을 같이 넘겨주면 된다.</p>]]></description></item><item><title>'Better way 51. 합성 가능한 클래스 확장이 필요하면 메타클래스보다는 클래스 데코레이터를 사용하라' 정리</title><link>https://mechurak.github.io/2021-01-05_class-decorator/</link><pubDate>Tue, 05 Jan 2021 01:00:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2021-01-05_class-decorator/</guid><description>클래스 데코레이터를 사용하면 클래스를 쉽게 확장할 수 있습니다.</description></item><item><title>'Better way 50. __set_name__으로 클래스 애트리뷰트를 표시하라' 정리</title><link>https://mechurak.github.io/2021-01-04_set-name/</link><pubDate>Mon, 04 Jan 2021 01:00:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2021-01-04_set-name/</guid><description>__set_name__을 통해서 해당 디스크립터를 할당 할 변수명을 미리 받을 수 있습니다.</description></item><item><title>'Better way 48. __init_subclass__를 사용해 하위 클래스를 검증하라' 정리</title><link>https://mechurak.github.io/2020-12-29_init-subclass/</link><pubDate>Tue, 29 Dec 2020 01:00:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2020-12-29_init-subclass/</guid><description>하위 클래스가 제대로 구현됐는지 확인하기 위해서는 &lt;code>__init_subclass__&lt;/code>를 사용합니다. (파이썬 3.6에서 추가됨)</description></item><item><title>'Better way 49. __init_subclass__를 사용해 클래스 확장을 등록하라' 정리</title><link>https://mechurak.github.io/2020-12-31_class-registration/</link><pubDate>Tue, 29 Dec 2020 01:00:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2020-12-31_class-registration/</guid><description>__init_subclass__를 통해서 하위 클래스 정의하면 각 클래스마다 꼭 불려야 하는 로직을 자동으로 수행할 수 있습니다.</description></item><item><title>'Better way 47. 지연 계산 애트리뷰트가 필요하면, __getattr__, __getattribute__, __setattr__을 사용하라' 정리</title><link>https://mechurak.github.io/2020-12-28_object-hook/</link><pubDate>Mon, 28 Dec 2020 01:00:00 +0900</pubDate><author><name>일편단씸</name></author><guid>https://mechurak.github.io/2020-12-28_object-hook/</guid><description>object hook을 사용해 특별한 일을 추가할 수 있습니다.</description></item></channel></rss>